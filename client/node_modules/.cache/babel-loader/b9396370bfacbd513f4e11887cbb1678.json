{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport userActionTypes from './user.types';\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.utils';\nimport { signInSuccess, signInFailure, signOutSuccess, signOutFailure, registerSuccess, registerFailure } from './user.actions';\nexport function* getSnapShotFromUserAuth(userAuth, additionalData) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth, additionalData);\n    const userSnapShot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapShot.id,\n      ...userSnapShot.data()\n    }));\n  } catch (err) {\n    yield put(signInFailure(err));\n  }\n}\n;\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapShotFromUserAuth(user);\n  } catch (err) {\n    yield put(signInFailure(err));\n  }\n}\n;\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapShotFromUserAuth(user);\n  } catch (err) {\n    yield put(signInFailure(err));\n  }\n}\n;\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapShotFromUserAuth(userAuth);\n  } catch (err) {\n    yield put(signInFailure(err));\n  }\n}\n;\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (err) {\n    yield put(signOutFailure(err));\n  }\n}\n;\nexport function* register({\n  payload: {\n    email,\n    password,\n    displayName\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.createUserWithEmailAndPassword(email, password);\n    yield put(registerSuccess({\n      user,\n      additionalData: {\n        displayName\n      }\n    }));\n  } catch (err) {\n    yield put(registerFailure(err));\n  }\n}\n;\nexport function* signInAfterRegister({\n  payload: {\n    user,\n    additionalData\n  }\n}) {\n  yield getSnapShotFromUserAuth(user, additionalData);\n}\n;\nexport function* onGoogleSignInStart() {\n  yield takeLatest(userActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\n;\nexport function* onEmailSignInStart() {\n  yield takeLatest(userActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\n;\nexport function* onCheckUserSession() {\n  yield takeLatest(userActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\n;\nexport function* onSignOutStart() {\n  yield takeLatest(userActionTypes.SIGN_OUT_START, signOut);\n}\n;\nexport function* onRegisterStart() {\n  yield takeLatest(userActionTypes.REGISTER_START, register);\n}\n;\nexport function* onRegisterSuccess() {\n  yield takeLatest(userActionTypes.REGISTER_SUCCESS, signInAfterRegister);\n}\n;\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(isUserAuthenticated), call(onSignOutStart), call(onRegisterStart), call(onRegisterSuccess)]);\n}\n;","map":{"version":3,"sources":["/Users/jerzy.gricuk/Desktop/privet/React/clothing_shop/clothing_shop/client/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","userActionTypes","auth","googleProvider","createUserProfileDocument","getCurrentUser","signInSuccess","signInFailure","signOutSuccess","signOutFailure","registerSuccess","registerFailure","getSnapShotFromUserAuth","userAuth","additionalData","userRef","userSnapShot","get","id","data","err","signInWithGoogle","user","signInWithPopup","signInWithEmail","payload","email","password","signInWithEmailAndPassword","isUserAuthenticated","signOut","register","displayName","createUserWithEmailAndPassword","signInAfterRegister","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","onCheckUserSession","CHECK_USER_SESSION","onSignOutStart","SIGN_OUT_START","onRegisterStart","REGISTER_START","onRegisterSuccess","REGISTER_SUCCESS","userSagas"],"mappings":"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","sourcesContent":["import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport userActionTypes from './user.types';\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.utils';\nimport { \n   signInSuccess,\n   signInFailure, \n   signOutSuccess, \n   signOutFailure,\n   registerSuccess,\n   registerFailure\n\n} from './user.actions';\n\nexport function* getSnapShotFromUserAuth(userAuth, additionalData) {\n   try { \n      const userRef = yield call(createUserProfileDocument, userAuth, additionalData);\n      const userSnapShot = yield userRef.get();\n      yield put(signInSuccess({ \n         id: userSnapShot.id, ...userSnapShot.data() \n      }));\n   } catch(err) {\n      yield put(signInFailure(err));\n   }\n};\n\nexport function* signInWithGoogle() {\n   try {\n      const { user } = yield auth.signInWithPopup(googleProvider);\n      yield getSnapShotFromUserAuth(user)\n   } catch(err) {\n      yield put(signInFailure(err));\n   }\n};\n\nexport function* signInWithEmail({ payload: { email, password }}) {\n   try {\n      const { user } = yield auth.signInWithEmailAndPassword(email, password);\n      yield getSnapShotFromUserAuth(user)\n\n   } catch(err) {\n      yield put(signInFailure(err));\n   }\n};\n\nexport function* isUserAuthenticated() {\n   try {\n      const userAuth = yield getCurrentUser();\n      if(!userAuth) return;\n      yield getSnapShotFromUserAuth(userAuth);\n   } catch(err) {\n      yield put(signInFailure(err));\n   }\n};\n\nexport function* signOut() {\n   try {\n      yield auth.signOut();\n      yield put(signOutSuccess());\n   } catch(err) {\n      yield put(signOutFailure(err));\n   }\n};\n\nexport function* register({payload :{email, password, displayName}}) {\n   try {\n      const { user } = yield auth.createUserWithEmailAndPassword(email, password);\n      yield put(registerSuccess({ user, additionalData: { displayName } }));\n   } catch(err) {\n      yield put(registerFailure(err))\n   }\n};\n\nexport function* signInAfterRegister({ payload: { user, additionalData } }) {\n   yield getSnapShotFromUserAuth(user, additionalData);\n};\n\nexport function* onGoogleSignInStart() {\n   yield takeLatest(userActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n};\n\nexport function* onEmailSignInStart() {\n   yield takeLatest(userActionTypes.EMAIL_SIGN_IN_START, signInWithEmail)\n};\n\nexport function* onCheckUserSession() {\n   yield takeLatest(userActionTypes.CHECK_USER_SESSION, isUserAuthenticated)\n};\n\nexport function* onSignOutStart() {\n   yield takeLatest(userActionTypes.SIGN_OUT_START, signOut)\n};\n\nexport function* onRegisterStart() {\n   yield takeLatest(userActionTypes.REGISTER_START, register)\n};\n\nexport function* onRegisterSuccess() {\n   yield takeLatest(userActionTypes.REGISTER_SUCCESS, signInAfterRegister)\n};\n\nexport function* userSagas() {\n   yield all([ \n      call(onGoogleSignInStart),\n      call(onEmailSignInStart),\n      call(isUserAuthenticated),\n      call(onSignOutStart),\n      call(onRegisterStart),\n      call(onRegisterSuccess)\n    ]);\n};\n"]},"metadata":{},"sourceType":"module"}