{"ast":null,"code":"import { takeLatest, call, put } from 'redux-saga/effects';\nimport shopActionTypes from './shop.types';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions';\nexport function* fetchCollectionsAsync() {\n  yield console.log('I am fired');\n\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (err) {\n    yield put(fetchCollectionsFailure(err.message));\n  }\n}\n;\nexport function* fetchCollectionsStart() {\n  yield takeLatest(shopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}\n;","map":{"version":3,"sources":["/Users/jerzy.gricuk/Desktop/privet/React/clothing_shop/clothing_shop/src/redux/shop/shop.sagas.js"],"names":["takeLatest","call","put","shopActionTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionsSuccess","fetchCollectionsFailure","fetchCollectionsAsync","console","log","collectionRef","collection","snapshot","get","collectionsMap","err","message","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,IAArB,EAA2BC,GAA3B,QAAsC,oBAAtC;AACA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AACA,SACGC,uBADH,EAC4BC,uBAD5B,QAEO,gBAFP;AAIA,OAAO,UAAUC,qBAAV,GAAkC;AACtC,QAAMC,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAN;;AACA,MAAI;AACD,UAAMC,aAAa,GAAGP,SAAS,CAACQ,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMd,IAAI,CAACI,+BAAD,EAAkCQ,QAAlC,CAAjC;AACA,UAAMX,GAAG,CAACI,uBAAuB,CAACS,cAAD,CAAxB,CAAT;AACF,GALD,CAKE,OAAMC,GAAN,EAAW;AACV,UAAMd,GAAG,CAACK,uBAAuB,CAACS,GAAG,CAACC,OAAL,CAAxB,CAAT;AACF;AACH;AAAA;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACtC,QAAMlB,UAAU,CACbG,eAAe,CAACgB,uBADH,EAEbX,qBAFa,CAAhB;AAIF;AAAA","sourcesContent":["import { takeLatest, call, put } from 'redux-saga/effects';\nimport shopActionTypes from './shop.types';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport {\n   fetchCollectionsSuccess, fetchCollectionsFailure\n} from './shop.actions';\n\nexport function* fetchCollectionsAsync() {\n   yield console.log('I am fired');\n   try {\n      const collectionRef = firestore.collection('collections');\n      const snapshot = yield collectionRef.get();\n      const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n      yield put(fetchCollectionsSuccess(collectionsMap));\n   } catch(err) {\n      yield put(fetchCollectionsFailure(err.message))\n   }\n};\n\nexport function* fetchCollectionsStart() {\n   yield takeLatest(\n      shopActionTypes.FETCH_COLLECTIONS_START, \n      fetchCollectionsAsync\n   );\n};"]},"metadata":{},"sourceType":"module"}