{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport userActionTypes from './user.types';\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.utils';\nimport { signInSuccess, signInFailure, signOutSuccess, signOutFailure } from './user.actions';\nexport function* getSnapShotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapShot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapShot.id,\n      ...userSnapShot.data()\n    }));\n  } catch (err) {\n    yield put(signInFailure(err));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapShotFromUserAuth(user);\n  } catch (err) {\n    yield put(signInFailure(err));\n  }\n}\n;\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapShotFromUserAuth(user);\n  } catch (err) {\n    yield put(signInFailure(err));\n  }\n}\n;\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapShotFromUserAuth(userAuth);\n  } catch (err) {\n    yield put(signInFailure(err));\n  }\n}\n;\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (err) {\n    yield put(signOutFailure(err));\n  }\n}\n;\nexport function* onGoogleSignInStart() {\n  yield takeLatest(userActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\n;\nexport function* onEmailSignInStart() {\n  yield takeLatest(userActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\n;\nexport function* onCheckUserSession() {\n  yield takeLatest(userActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\n;\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(isUserAuthenticated), call(onSignOutStart)]);\n}\n;\nexport function* onSignOutStart() {\n  yield takeLatest(userActionTypes.SIGN_OUT_START, signOut);\n}\n;","map":{"version":3,"sources":["/Users/jerzy.gricuk/Desktop/privet/React/clothing_shop/clothing_shop/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","userActionTypes","auth","googleProvider","createUserProfileDocument","getCurrentUser","signInSuccess","signInFailure","signOutSuccess","signOutFailure","getSnapShotFromUserAuth","userAuth","userRef","userSnapShot","get","id","data","err","signInWithGoogle","user","signInWithPopup","signInWithEmail","payload","email","password","signInWithEmailAndPassword","isUserAuthenticated","signOut","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","onCheckUserSession","CHECK_USER_SESSION","userSagas","onSignOutStart","SIGN_OUT_START"],"mappings":"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","sourcesContent":["import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport userActionTypes from './user.types';\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.utils';\nimport { signInSuccess, signInFailure, signOutSuccess, signOutFailure } from './user.actions';\n\nexport function* getSnapShotFromUserAuth(userAuth) {\n   try { \n      const userRef = yield call(createUserProfileDocument, userAuth);\n      const userSnapShot = yield userRef.get();\n      yield put(signInSuccess({ \n         id: userSnapShot.id, ...userSnapShot.data() \n      }));\n   } catch(err) {\n      yield put(signInFailure(err));\n   }\n}\n\nexport function* signInWithGoogle() {\n   try {\n      const { user } = yield auth.signInWithPopup(googleProvider);\n      yield getSnapShotFromUserAuth(user)\n   } catch(err) {\n      yield put(signInFailure(err));\n   }\n};\n\nexport function* signInWithEmail({ payload: { email, password }}) {\n   try {\n      const { user } = yield auth.signInWithEmailAndPassword(email, password);\n      yield getSnapShotFromUserAuth(user)\n\n   } catch(err) {\n      yield put(signInFailure(err));\n   }\n};\n\nexport function* isUserAuthenticated() {\n   try {\n      const userAuth = yield getCurrentUser();\n      if(!userAuth) return;\n      yield getSnapShotFromUserAuth(userAuth);\n   } catch(err) {\n      yield put(signInFailure(err));\n   }\n};\n\nexport function* signOut() {\n   try {\n      yield auth.signOut();\n      yield put(signOutSuccess());\n   } catch(err) {\n      yield put(signOutFailure(err));\n   }\n};\n\nexport function* onGoogleSignInStart() {\n   yield takeLatest(userActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n};\n\nexport function* onEmailSignInStart() {\n   yield takeLatest(userActionTypes.EMAIL_SIGN_IN_START, signInWithEmail)\n};\n\nexport function* onCheckUserSession() {\n   yield takeLatest(userActionTypes.CHECK_USER_SESSION, isUserAuthenticated)\n};\n\nexport function* userSagas() {\n   yield all([ \n      call(onGoogleSignInStart),\n      call(onEmailSignInStart),\n      call(isUserAuthenticated),\n      call(onSignOutStart)\n    ]);\n};\n\nexport function* onSignOutStart() {\n   yield takeLatest(userActionTypes.SIGN_OUT_START, signOut)\n};\n\n\n"]},"metadata":{},"sourceType":"module"}