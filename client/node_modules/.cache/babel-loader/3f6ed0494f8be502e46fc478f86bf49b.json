{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport userActionTypes from './user.types';\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.utils';\nimport { googleSignInSuccess, googleSignInFailure, emailSignInSuccess, emailSignInFailure } from './user.actions';\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapShot = yield userRef.get();\n    yield put(googleSignInSuccess({\n      id: userSnapShot.id,\n      ...userSnapShot.data()\n    }));\n  } catch (err) {\n    yield put(googleSignInFailure(err));\n  }\n}\n;\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapShot = yield userRef.get();\n    yield put(emailSignInSuccess({\n      id: userSnapShot.id,\n      ...userSnapShot.data()\n    }));\n  } catch (err) {\n    yield put(emailSignInFailure(err));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(userActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\n;\nexport function* onEmailSignInStart() {\n  yield takeLatest(userActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\n;\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}\n;","map":{"version":3,"sources":["/Users/jerzy.gricuk/Desktop/privet/React/clothing_shop/clothing_shop/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","userActionTypes","auth","googleProvider","createUserProfileDocument","googleSignInSuccess","googleSignInFailure","emailSignInSuccess","emailSignInFailure","signInWithGoogle","user","signInWithPopup","userRef","userSnapShot","get","id","data","err","signInWithEmail","payload","email","password","signInWithEmailAndPassword","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","userSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,oBAA3C;AACA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SAASC,IAAT,EAAeC,cAAf,EAA+BC,yBAA/B,QAAgE,+BAAhE;AACA,SACGC,mBADH,EAEGC,mBAFH,EAGGC,kBAHH,EAIGC,kBAJH,QAKQ,gBALR;AAOA,OAAO,UAAUC,gBAAV,GAA6B;AACjC,MAAI;AACD,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMR,IAAI,CAACS,eAAL,CAAqBR,cAArB,CAAvB;AACA,UAAMS,OAAO,GAAG,MAAMZ,IAAI,CAACI,yBAAD,EAA4BM,IAA5B,CAA1B;AACA,UAAMG,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMhB,GAAG,CAACO,mBAAmB,CAAC;AAC3BU,MAAAA,EAAE,EAAEF,YAAY,CAACE,EADU;AACN,SAAGF,YAAY,CAACG,IAAb;AADG,KAAD,CAApB,CAAT;AAGF,GAPD,CAOE,OAAMC,GAAN,EAAW;AACV,UAAMnB,GAAG,CAACQ,mBAAmB,CAACW,GAAD,CAApB,CAAT;AACF;AACH;AAAA;AAED,OAAO,UAAUC,eAAV,CAA0B;AAAEC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT;AAAX,CAA1B,EAA2D;AAC/D,MAAI;AACD,UAAM;AAAEX,MAAAA;AAAF,QAAW,MAAMR,IAAI,CAACoB,0BAAL,CAAgCF,KAAhC,EAAuCC,QAAvC,CAAvB;AACA,UAAMT,OAAO,GAAG,MAAMZ,IAAI,CAACI,yBAAD,EAA4BM,IAA5B,CAA1B;AACA,UAAMG,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMhB,GAAG,CAACS,kBAAkB,CAAC;AAC1BQ,MAAAA,EAAE,EAAEF,YAAY,CAACE,EADS;AACL,SAAGF,YAAY,CAACG,IAAb;AADE,KAAD,CAAnB,CAAT;AAIF,GARD,CAQE,OAAMC,GAAN,EAAW;AACV,UAAMnB,GAAG,CAACU,kBAAkB,CAACS,GAAD,CAAnB,CAAT;AACF;AACH;AAED,OAAO,UAAUM,mBAAV,GAAgC;AACpC,QAAM1B,UAAU,CAACI,eAAe,CAACuB,oBAAjB,EAAuCf,gBAAvC,CAAhB;AACF;AAAA;AAED,OAAO,UAAUgB,kBAAV,GAA+B;AACnC,QAAM5B,UAAU,CAACI,eAAe,CAACyB,mBAAjB,EAAsCR,eAAtC,CAAhB;AACF;AAAA;AAED,OAAO,UAAUS,SAAV,GAAsB;AAC1B,QAAM5B,GAAG,CAAE,CAACC,IAAI,CAACuB,mBAAD,CAAL,EAA4BvB,IAAI,CAACyB,kBAAD,CAAhC,CAAF,CAAT;AACF;AAAA","sourcesContent":["import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport userActionTypes from './user.types';\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.utils';\nimport { \n   googleSignInSuccess, \n   googleSignInFailure, \n   emailSignInSuccess, \n   emailSignInFailure\n } from './user.actions';\n\nexport function* signInWithGoogle() {\n   try {\n      const { user } = yield auth.signInWithPopup(googleProvider);\n      const userRef = yield call(createUserProfileDocument, user);\n      const userSnapShot = yield userRef.get();\n      yield put(googleSignInSuccess({ \n         id: userSnapShot.id, ...userSnapShot.data() \n      }));\n   } catch(err) {\n      yield put(googleSignInFailure(err));\n   }\n};\n\nexport function* signInWithEmail({ payload: { email, password }}) {\n   try {\n      const { user } = yield auth.signInWithEmailAndPassword(email, password);\n      const userRef = yield call(createUserProfileDocument, user);\n      const userSnapShot = yield userRef.get();\n      yield put(emailSignInSuccess({ \n         id: userSnapShot.id, ...userSnapShot.data() \n      }));\n\n   } catch(err) {\n      yield put(emailSignInFailure(err));\n   }\n}\n\nexport function* onGoogleSignInStart() {\n   yield takeLatest(userActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n};\n\nexport function* onEmailSignInStart() {\n   yield takeLatest(userActionTypes.EMAIL_SIGN_IN_START, signInWithEmail)\n};\n\nexport function* userSagas() {\n   yield all( [call(onGoogleSignInStart), call(onEmailSignInStart)] );\n};\n\n"]},"metadata":{},"sourceType":"module"}