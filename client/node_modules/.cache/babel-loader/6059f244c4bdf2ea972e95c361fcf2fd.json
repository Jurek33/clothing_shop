{"ast":null,"code":"import shopActionTypes from './shop.types';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nexport const fetchCollectionsStart = () => ({\n  type: shopActionTypes.FETCH_COLLECTIONS_START\n});\nexport const fetchCollectionsSuccess = collectionsMap => ({\n  type: shopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionsMap\n});\nexport const fetchCollectionsFailure = errorMessage => ({\n  type: shopActionTypes.FETCH_COLLECTIONS_FAILURE,\n  payload: errorMessage\n});\nexport const fetchCollectionsStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection('collections');\n    dispatch(fetchCollectionsStart());\n    collectionRef.get().then(snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      dispatch(fetchCollectionsSuccess(collectionsMap));\n    }).catch(err => dispatch(fetchCollectionsFailure(err.message)));\n  };\n};","map":{"version":3,"sources":["/Users/jerzy.gricuk/Desktop/privet/React/clothing_shop/clothing_shop/src/redux/shop/shop.actions.js"],"names":["shopActionTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionsStart","type","FETCH_COLLECTIONS_START","fetchCollectionsSuccess","collectionsMap","FETCH_COLLECTIONS_SUCCESS","payload","fetchCollectionsFailure","errorMessage","FETCH_COLLECTIONS_FAILURE","fetchCollectionsStartAsync","dispatch","collectionRef","collection","get","then","snapshot","catch","err","message"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B;AACA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AAEA,OAAO,MAAMC,qBAAqB,GAAG,OAAO;AACzCC,EAAAA,IAAI,EAAEJ,eAAe,CAACK;AADmB,CAAP,CAA9B;AAIP,OAAO,MAAMC,uBAAuB,GAAIC,cAAD,KAAqB;AACzDH,EAAAA,IAAI,EAAEJ,eAAe,CAACQ,yBADmC;AAEzDC,EAAAA,OAAO,EAAEF;AAFgD,CAArB,CAAhC;AAKP,OAAO,MAAMG,uBAAuB,GAAIC,YAAD,KAAmB;AACvDP,EAAAA,IAAI,EAAEJ,eAAe,CAACY,yBADiC;AAEvDH,EAAAA,OAAO,EAAEE;AAF8C,CAAnB,CAAhC;AAKP,OAAO,MAAME,0BAA0B,GAAG,MAAM;AAC7C,SAAOC,QAAQ,IAAI;AAChB,UAAMC,aAAa,GAAGd,SAAS,CAACe,UAAV,CAAqB,aAArB,CAAtB;AACAF,IAAAA,QAAQ,CAACX,qBAAqB,EAAtB,CAAR;AAEJY,IAAAA,aAAa,CAACE,GAAd,GACCC,IADD,CACMC,QAAQ,IAAI;AACjB,YAAMZ,cAAc,GAAGL,+BAA+B,CAACiB,QAAD,CAAtD;AACAL,MAAAA,QAAQ,CAACR,uBAAuB,CAACC,cAAD,CAAxB,CAAR;AACI,KAJL,EAKKa,KALL,CAKWC,GAAG,IAAIP,QAAQ,CAACJ,uBAAuB,CAACW,GAAG,CAACC,OAAL,CAAxB,CAL1B;AAME,GAVD;AAWF,CAZM","sourcesContent":["import shopActionTypes from './shop.types';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\n\nexport const fetchCollectionsStart = () => ({\n   type: shopActionTypes.FETCH_COLLECTIONS_START\n});\n\nexport const fetchCollectionsSuccess = (collectionsMap) => ({\n   type: shopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n   payload: collectionsMap\n});\n\nexport const fetchCollectionsFailure = (errorMessage) => ({\n   type: shopActionTypes.FETCH_COLLECTIONS_FAILURE,\n   payload: errorMessage\n})\n\nexport const fetchCollectionsStartAsync = () => {\n   return dispatch => {\n      const collectionRef = firestore.collection('collections');\n      dispatch(fetchCollectionsStart());\n\n\t\tcollectionRef.get()\n\t\t.then(snapshot => {\n\t\t\tconst collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n\t\t\tdispatch(fetchCollectionsSuccess(collectionsMap));\n      })\n      .catch(err => dispatch(fetchCollectionsFailure(err.message)))\n   }\n};"]},"metadata":{},"sourceType":"module"}